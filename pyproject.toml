[build-system]
requires = ['setuptools']
build-backend = 'setuptools.build_meta'

[project]
name = "cosmic_ray"
requires-python = ">= 3.9"
dynamic = ["version"]
authors = [{ name = "Sixty North AS", email = "austin@sixty-north.com" }]
description = "Mutation testing"
readme = { file = "README.rst", content-type = "text/x-rst" }
license = { file = "LICENCE.txt" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Testing",

]
dependencies = [
  "aiohttp",
  "anybadge",
  "click",
  "decorator",
  "exit_codes",
  "gitpython",
  "parso",
  "qprompt",
  "rich",
  "sqlalchemy",
  "stevedore",
  "toml",
  "yattag",
]

[project.scripts]
cosmic-ray = "cosmic_ray.cli:main"
cr-html = "cosmic_ray.tools.html:report_html"
cr-report = "cosmic_ray.tools.report:report"
cr-badge = "cosmic_ray.tools.badge:generate_badge"
cr-rate = "cosmic_ray.tools.survival_rate:format_survival_rate"
cr-xml = "cosmic_ray.tools.xml:report_xml"
cr-filter-operators = "cosmic_ray.tools.filters.operators_filter:main"
cr-filter-pragma = "cosmic_ray.tools.filters.pragma_no_mutate:main"
cr-filter-git = "cosmic_ray.tools.filters.git:main"
cr-http-workers = "cosmic_ray.tools.http_workers:main"

[project.entry-points."cosmic_ray.operator_providers"]
core = "cosmic_ray.operators.provider:OperatorProvider"

[project.entry-points."cosmic_ray.distributors"]
http = "cosmic_ray.distribution.http:HttpDistributor"
local = "cosmic_ray.distribution.local:LocalDistributor"

[project.urls]
repository = "https://github.com/sixty-north/cosmic-ray"

[tool.uv]
dev-dependencies = [
  "bump-my-version",
  "hypothesis",
  "nox",
  "pytest",
  "pytest-mock",
  "ruff",
  "sphinx",
  "sphinx-rtd-theme",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "cosmic_ray.version.__version__" }


[tool.bumpversion]
current_version = "8.3.17"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
tag = true
commit = true
message = "Bump version: {current_version} → {new_version}"
tag_name = "release/v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"

[[tool.bumpversion.files]]
filename = "src/cosmic_ray/version.py"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
  "UP", # PYUPGRADE
  "I",  # ISORT
]

[tool.ruff.lint.isort]
case-sensitive = true
known-first-party = ["cosmic_ray"]
